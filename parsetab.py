
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_OP AN ASSIGNEMENT_DECL ASSIGNEMENT_SIMPLE BOOL BOOL_OP BREAK COMP DECLARATION END_LOOP FOR IDENTIFIER IF IF_END IF_FALSE IF_TRUE INC_OP MAX_OP MIN_OP ML_COMMENT MOD_OP MUL_OP NL NOT NUMBER SL_COMMENT UNTIL WHILE programme : statement programme : statement programme  statement : assignation\n        | declaration\n        | expression\n        | structure\n        | commentstatement : BREAK\n       | BREAK new_line comment : statement SL_COMMENT new_line\n    | statement ML_COMMENT new_linecomment : SL_COMMENT new_line\n    | ML_COMMENT new_lineexpression : expression_num\n    | expression_boolexpression_num : ADD_OP expression_num AN expression_num \n            | MUL_OP expression_num AN expression_num\n            | MOD_OP expression_num AN expression_num\n            | MAX_OP expression_num AN expression_num\n            | MIN_OP expression_num AN expression_num\n            | ADD_OP expression_num AN expression_num new_line\n            | MUL_OP expression_num AN expression_num new_line\n            | MOD_OP expression_num AN expression_num new_line\n            | MAX_OP expression_num AN expression_num new_line\n            | MIN_OP expression_num AN expression_num new_lineexpression_num : INC_OP expression_num \n       | INC_OP expression_num new_lineexpression_num : NUMBER\n        | IDENTIFIER \n        | NUMBER new_line\n        | IDENTIFIER new_lineexpression_bool : BOOL\n       | BOOL new_lineexpression_bool : BOOL_OP expression_bool AN expression_bool\n       | BOOL_OP expression_bool AN expression_bool new_lineexpression_bool : NOT expression_bool\n       | NOT expression_bool new_lineexpression_bool : COMP expression_num AN expression_num\n       | COMP expression_num AN expression_num new_line declaration : DECLARATION IDENTIFIER ASSIGNEMENT_DECL expression\n        | DECLARATION IDENTIFIER ASSIGNEMENT_DECL expression new_line assignation : IDENTIFIER ASSIGNEMENT_SIMPLE expression\n        | IDENTIFIER ASSIGNEMENT_SIMPLE expression new_line new_line : NL new_line : NL NL structure : WHILE expression_bool programme END_LOOP \n        | WHILE expression_bool programme END_LOOP new_line structure : FOR IDENTIFIER UNTIL expression_num programme END_LOOP\n        | FOR IDENTIFIER UNTIL expression_num programme END_LOOP new_line structure : expression_bool IF new_line IF_TRUE new_line programme IF_END\n        | expression_bool IF new_line IF_TRUE new_line programme IF_END new_line structure : expression_bool IF new_line IF_TRUE new_line programme IF_FALSE new_line programme IF_END\n        | expression_bool IF new_line IF_TRUE new_line programme IF_FALSE new_line programme IF_END new_line'
    
_lr_action_items = {'IF_FALSE':([1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,33,38,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,97,98,100,102,103,],[-7,-4,-28,-14,-1,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,-13,-2,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,-19,-17,-18,-40,-38,-47,-35,-25,-21,-24,-22,-23,-41,-39,96,-48,-50,-49,-51,-52,-53,]),'NUMBER':([0,1,2,3,4,7,9,10,11,12,13,14,16,17,18,19,20,22,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[3,-7,-4,-28,3,-14,3,3,3,-32,-29,-15,3,-6,3,-3,3,-8,-5,3,-30,-44,-29,-26,3,-13,-33,-31,3,-12,-9,-36,-45,-27,3,-11,-10,3,-42,-15,3,3,3,3,3,-37,3,-46,-34,-20,-16,-43,3,-19,-17,-18,-40,-38,-47,-35,-25,-21,3,-24,-22,-23,-41,-39,-48,-50,-49,3,-51,-52,-53,]),'WHILE':([0,1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,32,33,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[5,-7,-4,-28,-14,5,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,5,-13,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,5,-19,-17,-18,-40,-38,-47,-35,-25,-21,5,-24,-22,-23,-41,-39,-48,-50,-49,5,-51,-52,-53,]),'ML_COMMENT':([0,1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,32,33,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[6,-7,-4,-28,-14,36,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,6,-13,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,6,-19,-17,-18,-40,-38,-47,-35,-25,-21,6,-24,-22,-23,-41,-39,-48,-50,-49,6,-51,-52,-53,]),'NL':([3,6,7,12,13,21,22,28,29,30,31,36,37,40,41,43,51,53,54,61,62,69,71,72,73,74,76,78,79,80,81,82,84,85,86,89,90,91,93,95,96,97,102,],[29,29,-14,29,29,29,29,-30,53,29,29,29,29,-33,-31,29,29,-45,-27,29,-15,-37,29,29,29,29,29,29,29,29,29,29,-35,-25,-21,-24,-22,-23,-39,29,29,29,29,]),'ASSIGNEMENT_SIMPLE':([13,],[42,]),'BOOL_OP':([0,1,2,3,5,7,8,10,12,13,14,17,19,22,24,25,28,29,30,31,32,33,40,41,42,48,49,51,53,54,56,58,59,61,62,68,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[8,-7,-4,-28,8,-14,8,8,-32,-29,-15,-6,-3,-8,8,-5,-30,-44,-29,-26,8,-13,-33,-31,8,-12,-9,-36,-45,-27,8,-11,-10,-42,-15,8,-37,-46,-34,-20,-16,-43,8,-19,-17,-18,-40,-38,-47,-35,-25,-21,8,-24,-22,-23,-41,-39,-48,-50,-49,8,-51,-52,-53,]),'MIN_OP':([0,1,2,3,4,7,9,10,11,12,13,14,16,17,18,19,20,22,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[9,-7,-4,-28,9,-14,9,9,9,-32,-29,-15,9,-6,9,-3,9,-8,-5,9,-30,-44,-29,-26,9,-13,-33,-31,9,-12,-9,-36,-45,-27,9,-11,-10,9,-42,-15,9,9,9,9,9,-37,9,-46,-34,-20,-16,-43,9,-19,-17,-18,-40,-38,-47,-35,-25,-21,9,-24,-22,-23,-41,-39,-48,-50,-49,9,-51,-52,-53,]),'ADD_OP':([0,1,2,3,4,7,9,10,11,12,13,14,16,17,18,19,20,22,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[11,-7,-4,-28,11,-14,11,11,11,-32,-29,-15,11,-6,11,-3,11,-8,-5,11,-30,-44,-29,-26,11,-13,-33,-31,11,-12,-9,-36,-45,-27,11,-11,-10,11,-42,-15,11,11,11,11,11,-37,11,-46,-34,-20,-16,-43,11,-19,-17,-18,-40,-38,-47,-35,-25,-21,11,-24,-22,-23,-41,-39,-48,-50,-49,11,-51,-52,-53,]),'BOOL':([0,1,2,3,5,7,8,10,12,13,14,17,19,22,24,25,28,29,30,31,32,33,40,41,42,48,49,51,53,54,56,58,59,61,62,68,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[12,-7,-4,-28,12,-14,12,12,-32,-29,-15,-6,-3,-8,12,-5,-30,-44,-29,-26,12,-13,-33,-31,12,-12,-9,-36,-45,-27,12,-11,-10,-42,-15,12,-37,-46,-34,-20,-16,-43,12,-19,-17,-18,-40,-38,-47,-35,-25,-21,12,-24,-22,-23,-41,-39,-48,-50,-49,12,-51,-52,-53,]),'IDENTIFIER':([0,1,2,3,4,7,9,10,11,12,13,14,15,16,17,18,19,20,22,23,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[13,-7,-4,-28,30,-14,30,13,30,-32,-29,-15,44,30,-6,30,-3,30,-8,50,-5,30,-30,-44,-29,-26,13,-13,-33,-31,30,-12,-9,-36,-45,-27,30,-11,-10,30,-42,-15,30,30,30,30,30,-37,30,-46,-34,-20,-16,-43,13,-19,-17,-18,-40,-38,-47,-35,-25,-21,13,-24,-22,-23,-41,-39,-48,-50,-49,13,-51,-52,-53,]),'$end':([1,2,3,7,10,12,13,14,17,19,22,25,27,28,29,30,31,33,38,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,78,79,80,81,82,83,84,85,86,89,90,91,92,93,95,97,98,100,102,103,],[-7,-4,-28,-14,-1,-32,-29,-15,-6,-3,-8,-5,0,-30,-44,-29,-26,-13,-2,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,-19,-17,-18,-40,-38,-47,-35,-25,-21,-24,-22,-23,-41,-39,-48,-50,-49,-51,-52,-53,]),'FOR':([0,1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,32,33,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[15,-7,-4,-28,-14,15,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,15,-13,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,15,-19,-17,-18,-40,-38,-47,-35,-25,-21,15,-24,-22,-23,-41,-39,-48,-50,-49,15,-51,-52,-53,]),'IF_END':([1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,33,38,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,97,98,100,101,102,103,],[-7,-4,-28,-14,-1,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,-13,-2,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,-19,-17,-18,-40,-38,-47,-35,-25,-21,-24,-22,-23,-41,-39,97,-48,-50,-49,-51,102,-52,-53,]),'AN':([3,12,28,29,30,31,34,35,39,40,41,45,46,47,51,52,53,54,69,72,73,74,78,79,80,82,84,85,86,89,90,91,93,],[-28,-32,-30,-44,-29,-26,56,57,60,-33,-31,65,66,67,-36,70,-45,-27,-37,-34,-20,-16,-19,-17,-18,-38,-35,-25,-21,-24,-22,-23,-39,]),'MAX_OP':([0,1,2,3,4,7,9,10,11,12,13,14,16,17,18,19,20,22,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[16,-7,-4,-28,16,-14,16,16,16,-32,-29,-15,16,-6,16,-3,16,-8,-5,16,-30,-44,-29,-26,16,-13,-33,-31,16,-12,-9,-36,-45,-27,16,-11,-10,16,-42,-15,16,16,16,16,16,-37,16,-46,-34,-20,-16,-43,16,-19,-17,-18,-40,-38,-47,-35,-25,-21,16,-24,-22,-23,-41,-39,-48,-50,-49,16,-51,-52,-53,]),'ASSIGNEMENT_DECL':([50,],[68,]),'UNTIL':([44,],[64,]),'IF':([3,12,14,28,29,30,31,40,41,51,53,54,69,72,73,74,78,79,80,82,84,85,86,89,90,91,93,],[-28,-32,43,-30,-44,-29,-26,-33,-31,-36,-45,-27,-37,-34,-20,-16,-19,-17,-18,-38,-35,-25,-21,-24,-22,-23,-39,]),'MUL_OP':([0,1,2,3,4,7,9,10,11,12,13,14,16,17,18,19,20,22,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[18,-7,-4,-28,18,-14,18,18,18,-32,-29,-15,18,-6,18,-3,18,-8,-5,18,-30,-44,-29,-26,18,-13,-33,-31,18,-12,-9,-36,-45,-27,18,-11,-10,18,-42,-15,18,18,18,18,18,-37,18,-46,-34,-20,-16,-43,18,-19,-17,-18,-40,-38,-47,-35,-25,-21,18,-24,-22,-23,-41,-39,-48,-50,-49,18,-51,-52,-53,]),'IF_TRUE':([29,53,63,],[-44,-45,76,]),'INC_OP':([0,1,2,3,4,7,9,10,11,12,13,14,16,17,18,19,20,22,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[4,-7,-4,-28,4,-14,4,4,4,-32,-29,-15,4,-6,4,-3,4,-8,-5,4,-30,-44,-29,-26,4,-13,-33,-31,4,-12,-9,-36,-45,-27,4,-11,-10,4,-42,-15,4,4,4,4,4,-37,4,-46,-34,-20,-16,-43,4,-19,-17,-18,-40,-38,-47,-35,-25,-21,4,-24,-22,-23,-41,-39,-48,-50,-49,4,-51,-52,-53,]),'SL_COMMENT':([0,1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,32,33,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[21,-7,-4,-28,-14,37,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,21,-13,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,21,-19,-17,-18,-40,-38,-47,-35,-25,-21,21,-24,-22,-23,-41,-39,-48,-50,-49,21,-51,-52,-53,]),'BREAK':([0,1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,32,33,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[22,-7,-4,-28,-14,22,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,22,-13,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,22,-19,-17,-18,-40,-38,-47,-35,-25,-21,22,-24,-22,-23,-41,-39,-48,-50,-49,22,-51,-52,-53,]),'END_LOOP':([1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,33,38,40,41,48,49,51,53,54,55,58,59,61,62,69,71,72,73,74,75,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,97,98,100,102,103,],[-7,-4,-28,-14,-1,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,-13,-2,-33,-31,-12,-9,-36,-45,-27,71,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,-19,-17,-18,-40,-38,-47,-35,-25,-21,95,-24,-22,-23,-41,-39,-48,-50,-49,-51,-52,-53,]),'DECLARATION':([0,1,2,3,7,10,12,13,14,17,19,22,25,28,29,30,31,32,33,40,41,48,49,51,53,54,58,59,61,62,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[23,-7,-4,-28,-14,23,-32,-29,-15,-6,-3,-8,-5,-30,-44,-29,-26,23,-13,-33,-31,-12,-9,-36,-45,-27,-11,-10,-42,-15,-37,-46,-34,-20,-16,-43,23,-19,-17,-18,-40,-38,-47,-35,-25,-21,23,-24,-22,-23,-41,-39,-48,-50,-49,23,-51,-52,-53,]),'NOT':([0,1,2,3,5,7,8,10,12,13,14,17,19,22,24,25,28,29,30,31,32,33,40,41,42,48,49,51,53,54,56,58,59,61,62,68,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[24,-7,-4,-28,24,-14,24,24,-32,-29,-15,-6,-3,-8,24,-5,-30,-44,-29,-26,24,-13,-33,-31,24,-12,-9,-36,-45,-27,24,-11,-10,-42,-15,24,-37,-46,-34,-20,-16,-43,24,-19,-17,-18,-40,-38,-47,-35,-25,-21,24,-24,-22,-23,-41,-39,-48,-50,-49,24,-51,-52,-53,]),'MOD_OP':([0,1,2,3,4,7,9,10,11,12,13,14,16,17,18,19,20,22,25,26,28,29,30,31,32,33,40,41,42,48,49,51,53,54,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[20,-7,-4,-28,20,-14,20,20,20,-32,-29,-15,20,-6,20,-3,20,-8,-5,20,-30,-44,-29,-26,20,-13,-33,-31,20,-12,-9,-36,-45,-27,20,-11,-10,20,-42,-15,20,20,20,20,20,-37,20,-46,-34,-20,-16,-43,20,-19,-17,-18,-40,-38,-47,-35,-25,-21,20,-24,-22,-23,-41,-39,-48,-50,-49,20,-51,-52,-53,]),'COMP':([0,1,2,3,5,7,8,10,12,13,14,17,19,22,24,25,28,29,30,31,32,33,40,41,42,48,49,51,53,54,56,58,59,61,62,68,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,97,98,99,100,102,103,],[26,-7,-4,-28,26,-14,26,26,-32,-29,-15,-6,-3,-8,26,-5,-30,-44,-29,-26,26,-13,-33,-31,26,-12,-9,-36,-45,-27,26,-11,-10,-42,-15,26,-37,-46,-34,-20,-16,-43,26,-19,-17,-18,-40,-38,-47,-35,-25,-21,26,-24,-22,-23,-41,-39,-48,-50,-49,26,-51,-52,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comment':([0,10,32,77,87,99,],[1,1,1,1,1,1,]),'assignation':([0,10,32,77,87,99,],[19,19,19,19,19,19,]),'expression_bool':([0,5,8,10,24,32,42,56,68,77,87,99,],[14,32,34,14,51,14,62,72,62,14,14,14,]),'statement':([0,10,32,77,87,99,],[10,10,10,10,10,10,]),'declaration':([0,10,32,77,87,99,],[2,2,2,2,2,2,]),'expression_num':([0,4,9,10,11,16,18,20,26,32,42,57,60,64,65,66,67,68,70,77,87,99,],[7,31,35,7,39,45,46,47,52,7,7,73,74,77,78,79,80,7,82,7,7,7,]),'new_line':([3,6,12,13,21,22,30,31,36,37,43,51,61,71,72,73,74,76,78,79,80,81,82,95,96,97,102,],[28,33,40,41,48,49,41,54,58,59,63,69,75,83,84,85,86,87,89,90,91,92,93,98,99,100,103,]),'expression':([0,10,32,42,68,77,87,99,],[25,25,25,61,81,25,25,25,]),'structure':([0,10,32,77,87,99,],[17,17,17,17,17,17,]),'programme':([0,10,32,77,87,99,],[27,38,55,88,94,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserLOL.py',9),
  ('programme -> statement programme','programme',2,'p_programme_recursive','parserLOL.py',13),
  ('statement -> assignation','statement',1,'p_statement','parserLOL.py',17),
  ('statement -> declaration','statement',1,'p_statement','parserLOL.py',18),
  ('statement -> expression','statement',1,'p_statement','parserLOL.py',19),
  ('statement -> structure','statement',1,'p_statement','parserLOL.py',20),
  ('statement -> comment','statement',1,'p_statement','parserLOL.py',21),
  ('statement -> BREAK','statement',1,'p_statement_break','parserLOL.py',25),
  ('statement -> BREAK new_line','statement',2,'p_statement_break','parserLOL.py',26),
  ('comment -> statement SL_COMMENT new_line','comment',3,'p_commentary','parserLOL.py',30),
  ('comment -> statement ML_COMMENT new_line','comment',3,'p_commentary','parserLOL.py',31),
  ('comment -> SL_COMMENT new_line','comment',2,'p_commentary_alone','parserLOL.py',35),
  ('comment -> ML_COMMENT new_line','comment',2,'p_commentary_alone','parserLOL.py',36),
  ('expression -> expression_num','expression',1,'p_expression','parserLOL.py',40),
  ('expression -> expression_bool','expression',1,'p_expression','parserLOL.py',41),
  ('expression_num -> ADD_OP expression_num AN expression_num','expression_num',4,'p_expression_op','parserLOL.py',45),
  ('expression_num -> MUL_OP expression_num AN expression_num','expression_num',4,'p_expression_op','parserLOL.py',46),
  ('expression_num -> MOD_OP expression_num AN expression_num','expression_num',4,'p_expression_op','parserLOL.py',47),
  ('expression_num -> MAX_OP expression_num AN expression_num','expression_num',4,'p_expression_op','parserLOL.py',48),
  ('expression_num -> MIN_OP expression_num AN expression_num','expression_num',4,'p_expression_op','parserLOL.py',49),
  ('expression_num -> ADD_OP expression_num AN expression_num new_line','expression_num',5,'p_expression_op','parserLOL.py',50),
  ('expression_num -> MUL_OP expression_num AN expression_num new_line','expression_num',5,'p_expression_op','parserLOL.py',51),
  ('expression_num -> MOD_OP expression_num AN expression_num new_line','expression_num',5,'p_expression_op','parserLOL.py',52),
  ('expression_num -> MAX_OP expression_num AN expression_num new_line','expression_num',5,'p_expression_op','parserLOL.py',53),
  ('expression_num -> MIN_OP expression_num AN expression_num new_line','expression_num',5,'p_expression_op','parserLOL.py',54),
  ('expression_num -> INC_OP expression_num','expression_num',2,'p_increment_op','parserLOL.py',58),
  ('expression_num -> INC_OP expression_num new_line','expression_num',3,'p_increment_op','parserLOL.py',59),
  ('expression_num -> NUMBER','expression_num',1,'p_expression_num_or_var','parserLOL.py',63),
  ('expression_num -> IDENTIFIER','expression_num',1,'p_expression_num_or_var','parserLOL.py',64),
  ('expression_num -> NUMBER new_line','expression_num',2,'p_expression_num_or_var','parserLOL.py',65),
  ('expression_num -> IDENTIFIER new_line','expression_num',2,'p_expression_num_or_var','parserLOL.py',66),
  ('expression_bool -> BOOL','expression_bool',1,'p_expression_bool','parserLOL.py',70),
  ('expression_bool -> BOOL new_line','expression_bool',2,'p_expression_bool','parserLOL.py',71),
  ('expression_bool -> BOOL_OP expression_bool AN expression_bool','expression_bool',4,'p_bool_op','parserLOL.py',75),
  ('expression_bool -> BOOL_OP expression_bool AN expression_bool new_line','expression_bool',5,'p_bool_op','parserLOL.py',76),
  ('expression_bool -> NOT expression_bool','expression_bool',2,'p_bool_not','parserLOL.py',80),
  ('expression_bool -> NOT expression_bool new_line','expression_bool',3,'p_bool_not','parserLOL.py',81),
  ('expression_bool -> COMP expression_num AN expression_num','expression_bool',4,'p_comp','parserLOL.py',85),
  ('expression_bool -> COMP expression_num AN expression_num new_line','expression_bool',5,'p_comp','parserLOL.py',86),
  ('declaration -> DECLARATION IDENTIFIER ASSIGNEMENT_DECL expression','declaration',4,'p_declaration','parserLOL.py',90),
  ('declaration -> DECLARATION IDENTIFIER ASSIGNEMENT_DECL expression new_line','declaration',5,'p_declaration','parserLOL.py',91),
  ('assignation -> IDENTIFIER ASSIGNEMENT_SIMPLE expression','assignation',3,'p_assign','parserLOL.py',95),
  ('assignation -> IDENTIFIER ASSIGNEMENT_SIMPLE expression new_line','assignation',4,'p_assign','parserLOL.py',96),
  ('new_line -> NL','new_line',1,'p_newLine','parserLOL.py',100),
  ('new_line -> NL NL','new_line',2,'p_multipleNewLine','parserLOL.py',104),
  ('structure -> WHILE expression_bool programme END_LOOP','structure',4,'p_while','parserLOL.py',108),
  ('structure -> WHILE expression_bool programme END_LOOP new_line','structure',5,'p_while','parserLOL.py',109),
  ('structure -> FOR IDENTIFIER UNTIL expression_num programme END_LOOP','structure',6,'p_for','parserLOL.py',113),
  ('structure -> FOR IDENTIFIER UNTIL expression_num programme END_LOOP new_line','structure',7,'p_for','parserLOL.py',114),
  ('structure -> expression_bool IF new_line IF_TRUE new_line programme IF_END','structure',7,'p_if','parserLOL.py',118),
  ('structure -> expression_bool IF new_line IF_TRUE new_line programme IF_END new_line','structure',8,'p_if','parserLOL.py',119),
  ('structure -> expression_bool IF new_line IF_TRUE new_line programme IF_FALSE new_line programme IF_END','structure',10,'p_ifElse','parserLOL.py',123),
  ('structure -> expression_bool IF new_line IF_TRUE new_line programme IF_FALSE new_line programme IF_END new_line','structure',11,'p_ifElse','parserLOL.py',124),
]
